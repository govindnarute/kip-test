{"version":3,"sources":["../../src/base/BasicHandler.js"],"names":["BasicHandler","constructor","routesCache","routes","setup","addRoute","route","push"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;AAcA;;;AAGO,MAAMA,YAAN,CAAmB;AACtBC,gBAAc;AACV;;;AAGA,SAAKC,WAAL,GAAmB,EAAnB;AACH;AACD,MAAIC,MAAJ,GAAa;AAAE,WAAO,KAAKD,WAAZ;AAA0B;AACzCE,UAAQ;AAAE,WAAO,IAAP;AAAc;AACxB;;;AAGAC,WAASC,KAAT,EAAgB;AACZ,SAAKJ,WAAL,CAAiBK,IAAjB,CAAsBD,KAAtB;AACH;AAdqB;QAAbN,Y,GAAAA,Y","file":"BasicHandler.js","sourcesContent":["/**\n * @typedef {Object} AppRoute\n * @param {string} path\n * @param {string} method\n * @param {string=} summary\n * @param {string=} description\n * @param {number=} responseStatus\n * @param {boolean|BaseAuth|BaseAuth[]} auth\n * @param {AppSchema} consumes\n * @param {Object} produces\n * @param {function(*)[]} beforeHooks\n * @param {function} handler\n */\n\n/**\n * Basic route handler\n */\nexport class BasicHandler {\n    constructor() {\n        /**\n         * @type {AppRoute[]}\n         */\n        this.routesCache = [];\n    }\n    get routes() { return this.routesCache; }\n    setup() { return null; }\n    /**\n     * @param {AppRoute} route\n     */\n    addRoute(route) {\n        this.routesCache.push(route);\n    }\n}\n"]}