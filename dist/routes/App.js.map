{"version":3,"sources":["../../src/routes/App.js"],"names":["swagger","App","constructor","container","application","use","bodyParser","json","limit","resolve","appBuilder","API_URL","RoutesInjector","registerRoutes","router","config","get","serve","setup","getDocs"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,O;;AACZ;;;;;;AAEO,MAAMC,GAAN,CAAU;AACb;;;;AAIAC,gBAAYC,SAAZ,EAAuB;AACnB,aAAKA,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,cAAMC,cAAc,wBAApB;AACAA,oBAAYC,GAAZ,CAAgBC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAhB;AACAJ,oBAAYC,GAAZ,CAAgB,qBAAhB;AACAD,oBAAYC,GAAZ,CAAgB,KAAKF,SAAL,CAAeM,OAAf,CAAuB,eAAvB,CAAhB;AACAL,oBAAYC,GAAZ,CAAgB,KAAKF,SAAL,CAAeM,OAAf,CAAuB,gBAAvB,CAAhB;AACAL,oBAAYC,GAAZ,CAAgB,KAAKF,SAAL,CAAeM,OAAf,CAAuB,qBAAvB,CAAhB;;AAEA,cAAMC,aAAa,KAAKP,SAAL,CAAeM,OAAf,CAAuB,YAAvB,CAAnB;AACAC,mBAAWC,OAAX,GAAqB,MAArB;;AAEAC,uCAAeC,cAAf,CAA8B,KAAKV,SAAnC,EAA8CO,UAA9C;;AAEAN,oBAAYC,GAAZ,CAAgBK,WAAWI,MAA3B;;AAEA,YAAI,SAASC,iBAAOC,GAAP,CAAW,YAAX,CAAb,EAAuC;AACnCZ,wBAAYC,GAAZ,CAAgB,UAAhB,EAA4BL,QAAQiB,KAApC,EAA2CjB,QAAQkB,KAAR,CAAcR,WAAWS,OAAX,EAAd,CAA3C;AACH;;AAEDf,oBAAYC,GAAZ,CAAgB,KAAKF,SAAL,CAAeM,OAAf,CAAuB,cAAvB,CAAhB;;AAEA,eAAOL,WAAP;AACH;AAhCY;QAAJH,G,GAAAA,G","file":"App.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport config from 'config';\nimport * as swagger from 'swagger-ui-express';\nimport { RoutesInjector } from '../utils/routesInjector/RoutesInjector';\n\nexport class App {\n    /**\n     * @param {Object} container Awilix container for DI\n     * @returns {e.Express}\n     */\n    constructor(container) {\n        this.container = container;\n\n        /**\n         * @type {e.Express}\n         */\n        const application = express();\n        application.use(bodyParser.json({ limit: '50mb' }));\n        application.use(cors());\n        application.use(this.container.resolve('RequestLogger'));\n        application.use(this.container.resolve('TimeoutCounter'));\n        application.use(this.container.resolve('SetLocaleMiddleware'));\n\n        const appBuilder = this.container.resolve('AppBuilder');\n        appBuilder.API_URL = '/api';\n\n        RoutesInjector.registerRoutes(this.container, appBuilder);\n\n        application.use(appBuilder.router);\n\n        if (true !== config.get('production')) {\n            application.use('/swagger', swagger.serve, swagger.setup(appBuilder.getDocs()));\n        }\n\n        application.use(this.container.resolve('ErrorHandler'));\n\n        return application;\n    }\n}\n"]}