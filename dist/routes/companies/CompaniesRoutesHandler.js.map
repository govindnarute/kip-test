{"version":3,"sources":["../../../src/routes/companies/CompaniesRoutesHandler.js"],"names":["CompaniesRoutesHandler","BasicHandler","constructor","container","apiRoot","setup","controller","CompaniesController","addRoute","path","method","summary","description","tags","auth","consumes","UserProfessionalSchema","produces","UserProfessionalDto","schema","responseStatus","HttpStatusCode","OK","beforeHooks","UsersService","checkUserIdentities","bind","handler","createCompanies"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAEe,MAAMA,sBAAN,SAAqCC,0BAArC,CAAkD;AAC7DC,gBAAYC,SAAZ,EAAuB;AACnB;AACA,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAKC,OAAL,GAAe,YAAf;AACH;;AAEDC,YAAQ;AACJ,cAAMC,aAAa,KAAKH,SAAL,CAAeI,mBAAlC;;AAEA,aAAKC,QAAL,CAAc;AACVC,kBAAM,GADI;AAEVC,oBAAQ,MAFE;AAGVC,qBAAS,2BAHC;AAIVC,yBAAa,uIAJH;AAKVC,kBAAM,CAAC,iBAAD,CALI;AAMVC,kBAAM,IANI;AAOVC,sBAAU,KAAKZ,SAAL,CAAea,sBAPf;AAQVC,sBAAUC,uCAAoBC,MARpB;AASVC,4BAAgBC,sBAAeC,EATrB;AAUVC,yBAAa,CACT,KAAKpB,SAAL,CAAeqB,YAAf,CAA4BC,mBAA5B,CAAgDC,IAAhD,CAAqD,KAAKvB,SAAL,CAAeqB,YAApE,CADS,CAVH;AAaVG,qBAASrB,WAAWsB,eAAX,CAA2BF,IAA3B,CAAgCpB,UAAhC;AAbC,SAAd;AAgBH;AA1B4D;kBAA5CN,sB","file":"CompaniesRoutesHandler.js","sourcesContent":["import { BasicHandler } from '../../base/BasicHandler';\nimport { HttpStatusCode } from '../../resources/erros';\nimport { UserProfessionalDto } from '../../models/userProfessionals';\n\nexport default class CompaniesRoutesHandler extends BasicHandler {\n    constructor(container) {\n        super();\n        this.container = container;\n        this.apiRoot = '/companies';\n    }\n\n    setup() {\n        const controller = this.container.CompaniesController;\n\n        this.addRoute({\n            path: '/',\n            method: 'post',\n            summary: 'Add professional info API',\n            description: 'User professional info. \\'fromDate\\' and \\'toDate\\' can send without time (e.g. 2015-05-25). Set \\'id=null\\' to add your own company.',\n            tags: ['Identities info'],\n            auth: true,\n            consumes: this.container.UserProfessionalSchema,\n            produces: UserProfessionalDto.schema,\n            responseStatus: HttpStatusCode.OK,\n            beforeHooks: [\n                this.container.UsersService.checkUserIdentities.bind(this.container.UsersService)\n            ],\n            handler: controller.createCompanies.bind(controller),\n        });\n\n    }\n}\n"]}