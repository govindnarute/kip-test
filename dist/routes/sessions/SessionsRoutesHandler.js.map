{"version":3,"sources":["../../../src/routes/sessions/SessionsRoutesHandler.js"],"names":["SessionsRouterHandler","BasicHandler","constructor","container","apiRoot","setup","controller","SessionsController","addRoute","path","method","summary","description","tags","auth","consumes","SignInSchema","produces","UserSessionDto","schema","responseStatus","HttpStatusCode","OK","beforeHooks","handler","startSession","bind","RefreshSessionSchema","SessionDto","refresh","EmptySchema","EmptyDto","NoContent","TokenHelper","getToken","logOut"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEe,MAAMA,qBAAN,SAAoCC,0BAApC,CAAiD;AAC5DC,gBAAYC,SAAZ,EAAuB;AACnB;AACA,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAKC,OAAL,GAAe,WAAf;AACH;;AAEDC,YAAQ;AACJ,cAAMC,aAAa,KAAKH,SAAL,CAAeI,kBAAlC;AACA,aAAKC,QAAL,CAAc;AACVC,kBAAM,GADI;AAEVC,oBAAQ,MAFE;AAGVC,qBAAS,kBAHC;AAIVC,yBAAa,8CAJH;AAKVC,kBAAM,CAAC,UAAD,CALI;AAMVC,kBAAM,KANI;AAOVC,sBAAU,KAAKZ,SAAL,CAAea,YAPf;AAQVC,sBAAUC,+BAAeC,MARf;AASVC,4BAAgBC,sBAAeC,EATrB;AAUVC,yBAAa,EAVH;AAWVC,qBAASlB,WAAWmB,YAAX,CAAwBC,IAAxB,CAA6BpB,UAA7B;AAXC,SAAd;;AAcA,aAAKE,QAAL,CAAc;AACVC,kBAAM,GADI;AAEVC,oBAAQ,KAFE;AAGVC,qBAAS,qBAHC;AAIVC,yBAAa,yBAJH;AAKVC,kBAAM,CAAC,UAAD,CALI;AAMVC,kBAAM,KANI;AAOVC,sBAAU,KAAKZ,SAAL,CAAewB,oBAPf;AAQVV,sBAAUW,uBAAWT,MARX;AASVC,4BAAgBC,sBAAeC,EATrB;AAUVC,yBAAa,EAVH;AAWVC,qBAASlB,WAAWuB,OAAX,CAAmBH,IAAnB,CAAwBpB,UAAxB;AAXC,SAAd;;AAcA,aAAKE,QAAL,CAAc;AACVC,kBAAM,GADI;AAEVC,oBAAQ,QAFE;AAGVC,qBAAS,mBAHC;AAIVC,yBAAa,iBAJH;AAKVC,kBAAM,CAAC,UAAD,CALI;AAMVC,kBAAM,IANI;AAOVC,sBAAU,KAAKZ,SAAL,CAAe2B,WAPf;AAQVb,sBAAUc,mBAASZ,MART;AASVC,4BAAgBC,sBAAeW,SATrB;AAUVT,yBAAa,CAACU,yBAAYC,QAAb,CAVH;AAWVV,qBAASlB,WAAW6B,MAAX,CAAkBT,IAAlB,CAAuBpB,UAAvB;AAXC,SAAd;AAaH;AAlD2D;kBAA3CN,qB","file":"SessionsRoutesHandler.js","sourcesContent":["import { BasicHandler } from '../../base/BasicHandler';\nimport { UserSessionDto } from '../../models/users/UserSessionDto';\nimport { TokenHelper } from '../../helpers/TokenHelper';\nimport { EmptyDto } from '../../base/EmptyDto';\nimport { SessionDto } from '../../models/sessions/SessionDto';\nimport { HttpStatusCode } from '../../resources/erros';\n\nexport default class SessionsRouterHandler extends BasicHandler {\n    constructor(container) {\n        super();\n        this.container = container;\n        this.apiRoot = '/sessions';\n    }\n\n    setup() {\n        const controller = this.container.SessionsController;\n        this.addRoute({\n            path: '/',\n            method: 'post',\n            summary: 'User sign in API',\n            description: 'Sign in existing user, lifeTime - in seconds',\n            tags: ['Sessions'],\n            auth: false,\n            consumes: this.container.SignInSchema,\n            produces: UserSessionDto.schema,\n            responseStatus: HttpStatusCode.OK,\n            beforeHooks: [],\n            handler: controller.startSession.bind(controller),\n        });\n\n        this.addRoute({\n            path: '/',\n            method: 'put',\n            summary: 'Refresh session API',\n            description: 'Refresh expired session',\n            tags: ['Sessions'],\n            auth: false,\n            consumes: this.container.RefreshSessionSchema,\n            produces: SessionDto.schema,\n            responseStatus: HttpStatusCode.OK,\n            beforeHooks: [],\n            handler: controller.refresh.bind(controller),\n        });\n\n        this.addRoute({\n            path: '/',\n            method: 'delete',\n            summary: 'User sign out API',\n            description: 'Destroy session',\n            tags: ['Sessions'],\n            auth: true,\n            consumes: this.container.EmptySchema,\n            produces: EmptyDto.schema,\n            responseStatus: HttpStatusCode.NoContent,\n            beforeHooks: [TokenHelper.getToken],\n            handler: controller.logOut.bind(controller),\n        });\n    }\n}\n"]}