{"version":3,"sources":["../../../src/routes/images/ImagesRoutesHandler.js"],"names":["ImagesRoutesHandler","BasicHandler","constructor","container","apiRoot","setup","controller","ImagesController","addRoute","path","method","summary","description","ApiDescriptions","postImage","tags","auth","consumes","FileContentTypeSchema","produces","ImageAwsMetaDto","schema","responseStatus","HttpStatusCode","Created","beforeHooks","handler","prepareLoadUrl","bind","ImageStatusSchema","EmptyDto","NoContent","updateStatus"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEe,MAAMA,mBAAN,SAAkCC,0BAAlC,CAA+C;AAC1DC,gBAAYC,SAAZ,EAAuB;AACnB;AACA,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAKC,OAAL,GAAe,SAAf;AACH;;AAEDC,YAAQ;AACJ,cAAMC,aAAa,KAAKH,SAAL,CAAeI,gBAAlC;;AAEA,aAAKC,QAAL,CAAc;AACVC,kBAAM,GADI;AAEVC,oBAAQ,MAFE;AAGVC,qBAAS,wBAHC;AAIVC,yBAAaC,wBAAgBC,SAJnB;AAKVC,kBAAM,CAAC,QAAD,CALI;AAMVC,kBAAM,IANI;AAOVC,sBAAU,KAAKd,SAAL,CAAee,qBAPf;AAQVC,sBAAUC,iCAAgBC,MARhB;AASVC,4BAAgBC,sBAAeC,OATrB;AAUVC,yBAAa,EAVH;AAWVC,qBAASpB,WAAWqB,cAAX,CAA0BC,IAA1B,CAA+BtB,UAA/B;AAXC,SAAd;;AAcA,aAAKE,QAAL,CAAc;AACVC,kBAAM,WADI;AAEVC,oBAAQ,OAFE;AAGVC,qBAAS,qBAHC;AAIVC,yBAAa,8CAJH;AAKVG,kBAAM,CAAC,QAAD,CALI;AAMVC,kBAAM,IANI;AAOVC,sBAAU,KAAKd,SAAL,CAAe0B,iBAPf;AAQVV,sBAAUW,mBAAST,MART;AASVC,4BAAgBC,sBAAeQ,SATrB;AAUVN,yBAAa,EAVH;AAWVC,qBAASpB,WAAW0B,YAAX,CAAwBJ,IAAxB,CAA6BtB,UAA7B;AAXC,SAAd;AAaH;AArCyD;kBAAzCN,mB","file":"ImagesRoutesHandler.js","sourcesContent":["import { BasicHandler } from '../../base/BasicHandler';\nimport { HttpStatusCode } from '../../resources/erros';\nimport { ImageAwsMetaDto } from '../../models/images/ImageAwsMetaDto';\nimport { EmptyDto } from '../../base/EmptyDto';\nimport { ApiDescriptions } from '../../resources/images';\n\nexport default class ImagesRoutesHandler extends BasicHandler {\n    constructor(container) {\n        super();\n        this.container = container;\n        this.apiRoot = '/images';\n    }\n\n    setup() {\n        const controller = this.container.ImagesController;\n\n        this.addRoute({\n            path: '/',\n            method: 'post',\n            summary: 'Request for save image',\n            description: ApiDescriptions.postImage,\n            tags: ['Images'],\n            auth: true,\n            consumes: this.container.FileContentTypeSchema,\n            produces: ImageAwsMetaDto.schema,\n            responseStatus: HttpStatusCode.Created,\n            beforeHooks: [],\n            handler: controller.prepareLoadUrl.bind(controller),\n        });\n\n        this.addRoute({\n            path: '/:imageId',\n            method: 'patch',\n            summary: 'Update image status',\n            description: 'Update image status: 1 - pending, 2 - loaded',\n            tags: ['Images'],\n            auth: true,\n            consumes: this.container.ImageStatusSchema,\n            produces: EmptyDto.schema,\n            responseStatus: HttpStatusCode.NoContent,\n            beforeHooks: [],\n            handler: controller.updateStatus.bind(controller),\n        });\n    }\n}\n"]}