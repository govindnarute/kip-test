{"version":3,"sources":["../../../src/services/emails/MailerService.js"],"names":["MailerService","constructor","config","RedisWrapper","i18nService","redis","sgMail","setApiKey","mailer","apiKey","sendMail","params","send","sendVerificationEmail","user","token","from","to","email","subject","translate","html","getVerificationBody","sendChangePasswordEmail","getChangePasswordBody","sendRestorePasswordEmail","getResetBody","file","fs","readFileSync","path","join","__dirname","ejs","render","userEmail","verificationLink","client","url","resetPasswordLink"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;AAGe,MAAMA,aAAN,CAAoB;AAC/BC,gBAAY,EAAEC,MAAF,EAAUC,YAAV,EAAwBC,WAAxB,EAAZ,EAAmD;AAC/C,aAAKF,MAAL,GAAcA,MAAd;AACA,aAAKG,KAAL,GAAaF,YAAb;AACA,aAAKC,WAAL,GAAmBA,WAAnB;;AAEAE,uBAAOC,SAAP,CAAiB,KAAKL,MAAL,CAAYM,MAAZ,CAAmBC,MAApC;AACH;AACD;;;;AAIA,UAAMC,QAAN,CAAeC,MAAf,EAAuB;AACnB,eAAOL,eAAOM,IAAP,CAAYD,MAAZ,CAAP;AACH;;AAED;;;;;AAKA,UAAME,qBAAN,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACrC,eAAO,KAAKL,QAAL,CAAc;AACjBM,kBAAM,KAAKd,MAAL,CAAYM,MAAZ,CAAmBQ,IADR;AAEjBC,gBAAIH,KAAKI,KAFQ;AAGjBC,qBAAS,KAAKf,WAAL,CAAiBgB,SAAjB,CAA2B,4BAA3B,CAHQ;AAIjBC,kBAAM,KAAKC,mBAAL,CAAyBR,IAAzB,EAA+BC,KAA/B;AAJW,SAAd,CAAP;AAMH;;AAED;;;;AAIAQ,4BAAwBT,IAAxB,EAA8B;AAC1B,eAAO,KAAKJ,QAAL,CAAc;AACjBM,kBAAM,KAAKd,MAAL,CAAYM,MAAZ,CAAmBQ,IADR;AAEjBC,gBAAIH,KAAKI,KAFQ;AAGjBC,qBAAS,KAAKf,WAAL,CAAiBgB,SAAjB,CAA2B,yBAA3B,CAHQ;AAIjBC,kBAAM,KAAKG,qBAAL;AAJW,SAAd,CAAP;AAMH;;AAED;;;;;AAKA,UAAMC,wBAAN,CAA+BX,IAA/B,EAAqCC,KAArC,EAA4C;AACxC,eAAO,KAAKL,QAAL,CAAc;AACjBM,kBAAM,KAAKd,MAAL,CAAYM,MAAZ,CAAmBQ,IADR;AAEjBC,gBAAIH,KAAKI,KAFQ;AAGjBC,qBAAS,KAAKf,WAAL,CAAiBgB,SAAjB,CAA2B,wBAA3B,CAHQ;AAIjBC,kBAAM,KAAKK,YAAL,CAAkBZ,IAAlB,EAAwBC,KAAxB;AAJW,SAAd,CAAP;AAMH;;AAED;;;;;AAKAO,wBAAoBR,IAApB,EAA0BC,KAA1B,EAAiC;AAC7B,cAAMY,OAAOC,aAAGC,YAAH,CAAgBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,6DAArB,CAAhB,EAAqG,MAArG,CAAb;AACA,eAAOC,cAAIC,MAAJ,CAAWP,IAAX,EAAiB;AACpBQ,uBAAWrB,KAAKI,KADI;AAEpBkB,8BAAmB,GAAE,KAAKlC,MAAL,CAAYmC,MAAZ,CAAmBC,GAAI,kBAAiBvB,KAAM;AAF/C,SAAjB,CAAP;AAIH;;AAED;;;;;AAKAW,iBAAaZ,IAAb,EAAmBC,KAAnB,EAA0B;AACtB,cAAMY,OAAOC,aAAGC,YAAH,CAAgBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,yDAArB,CAAhB,EAAiG,MAAjG,CAAb;AACA,eAAOC,cAAIC,MAAJ,CAAWP,IAAX,EAAiB;AACpBQ,uBAAWrB,KAAKI,KADI;AAEpBqB,+BAAoB,GAAE,KAAKrC,MAAL,CAAYmC,MAAZ,CAAmBC,GAAI,mBAAkBvB,KAAM;AAFjD,SAAjB,CAAP;AAIH;;AAED;;;AAGAS,4BAAwB;AACpB,eAAO,KAAKpB,WAAL,CAAiBgB,SAAjB,CAA2B,uBAA3B,CAAP;AACH;AAxF8B;kBAAdpB,a","file":"MailerService.js","sourcesContent":["import sgMail from '@sendgrid/mail';\nimport ejs from 'ejs';\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * Mailer Service\n */\nexport default class MailerService {\n    constructor({ config, RedisWrapper, i18nService }) {\n        this.config = config;\n        this.redis = RedisWrapper;\n        this.i18nService = i18nService;\n\n        sgMail.setApiKey(this.config.mailer.apiKey);\n    }\n    /**\n     * @param params\n     * @return {Promise<*>}\n     */\n    async sendMail(params) {\n        return sgMail.send(params);\n    }\n\n    /**\n     * @param {UserDto} user\n     * @param {string} token\n     * @return {Promise<*>}\n     */\n    async sendVerificationEmail(user, token) {\n        return this.sendMail({\n            from: this.config.mailer.from,\n            to: user.email,\n            subject: this.i18nService.translate('EMAIL_VERIFICATION_SUBJECT'),\n            html: this.getVerificationBody(user, token)\n        });\n    }\n\n    /**\n     * @param user\n     * @returns {Promise.<*>}\n     */\n    sendChangePasswordEmail(user) {\n        return this.sendMail({\n            from: this.config.mailer.from,\n            to: user.email,\n            subject: this.i18nService.translate('CHANGE_PASSWORD_SUBJECT'),\n            html: this.getChangePasswordBody()\n        });\n    }\n\n    /**\n     * @param {UserDto} user\n     * @param {string} token\n     * @return {Promise<*>}\n     */\n    async sendRestorePasswordEmail(user, token) {\n        return this.sendMail({\n            from: this.config.mailer.from,\n            to: user.email,\n            subject: this.i18nService.translate('RESET_PASSWORD_SUBJECT'),\n            html: this.getResetBody(user, token)\n        });\n    }\n\n    /**\n     * @param {UserDto} user\n     * @param {string} token\n     * @return {string}\n     */\n    getVerificationBody(user, token) {\n        const file = fs.readFileSync(path.join(__dirname, '../../../views/emailTemplates/emailVerificationTemplate.ejs'), 'utf8');\n        return ejs.render(file, {\n            userEmail: user.email,\n            verificationLink: `${this.config.client.url}/verifications/${token}`\n        });\n    }\n\n    /**\n     * @param {UserDto} user\n     * @param {string} token\n     * @return {string}\n     */\n    getResetBody(user, token) {\n        const file = fs.readFileSync(path.join(__dirname, '../../../views/emailTemplates/resetPasswordTemplate.ejs'), 'utf8');\n        return ejs.render(file, {\n            userEmail: user.email,\n            resetPasswordLink: `${this.config.client.url}/reset_password/${token}`\n        });\n    }\n\n    /**\n     * @returns {string}\n     */\n    getChangePasswordBody() {\n        return this.i18nService.translate('CHANGE_PASSWORD_EMAIL');\n    }\n}\n"]}