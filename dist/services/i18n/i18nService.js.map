{"version":3,"sources":["../../../src/services/i18n/i18nService.js"],"names":["LocaleService","constructor","i18n","configure","locales","defaultLocale","directory","__dirname","autoReload","updateFiles","indent","getCurrentLocale","getLocale","getLocales","setLocale","locale","indexOf","translate","string","args","undefined","__","translatePlurals","phrase","count","__n"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;AAGe,MAAMA,aAAN,CAAoB;;AAE/BC,kBAAc;AACVC,uBAAKC,SAAL,CAAe;AACXC,qBAAS,CAAC,IAAD,CADE;AAEXC,2BAAe,IAFJ;AAGXC,uBAAWC,YAAY,mBAHZ;AAIXC,wBAAY,KAJD;AAKXC,yBAAa,KALF;AAMXC,oBAAQ;AANG,SAAf;AAQH;;AAED;;;;AAIAC,uBAAmB;AACf,eAAOT,eAAKU,SAAL,EAAP;AACH;;AAED;;;;AAIAC,iBAAa;AACT,eAAOX,eAAKW,UAAL,EAAP;AACH;;AAED;;;;AAIAC,cAAUC,MAAV,EAAkB;AACd,YAAI,KAAKF,UAAL,GAAkBG,OAAlB,CAA0BD,MAA1B,MAAsC,CAAC,CAA3C,EAA8C;AAC1Cb,2BAAKY,SAAL,CAAeC,MAAf;AACH;AACJ;;AAED;;;;;;AAMAE,cAAUC,MAAV,EAAkBC,OAAOC,SAAzB,EAAoC;AAChC,eAAOlB,eAAKmB,EAAL,CAAQH,MAAR,EAAgBC,IAAhB,CAAP;AACH;;AAED;;;;;;AAMAG,qBAAiBC,MAAjB,EAAyBC,KAAzB,EAAgC;AAC5B,eAAOtB,eAAKuB,GAAL,CAASF,MAAT,EAAiBC,KAAjB,CAAP;AACH;AAzD8B;kBAAdxB,a","file":"i18nService.js","sourcesContent":["import i18n from 'i18n';\n\n/**\n * LocaleService\n */\nexport default class LocaleService {\n\n    constructor() {\n        i18n.configure({\n            locales: ['en'],\n            defaultLocale: 'en',\n            directory: __dirname + '/../../../locales',\n            autoReload: false,\n            updateFiles: false,\n            indent: '    '\n        });\n    }\n\n    /**\n     *\n     * @returns {string} The current locale code\n     */\n    getCurrentLocale() {\n        return i18n.getLocale();\n    }\n\n    /**\n     *\n     * @returns string[] The list of available locale codes\n     */\n    getLocales() {\n        return i18n.getLocales();\n    }\n\n    /**\n     *\n     * @param locale The locale to set. Must be from the list of available i18n.\n     */\n    setLocale(locale) {\n        if (this.getLocales().indexOf(locale) !== -1) {\n            i18n.setLocale(locale);\n        }\n    }\n\n    /**\n     *\n     * @param string String to translate\n     * @param args Extra parameters\n     * @returns {string} Translated string\n     */\n    translate(string, args = undefined) {\n        return i18n.__(string, args);\n    }\n\n    /**\n     *\n     * @param phrase Object to translate\n     * @param count The plural number\n     * @returns {string} Translated string\n     */\n    translatePlurals(phrase, count) {\n        return i18n.__n(phrase, count);\n    }\n}\n"]}