{"version":3,"sources":["../src/main.js"],"names":["process","env","NODE_ENV","port","config","get","container","DIContainerFactory","createContainer","application","App","server","http","createServer","listen","address","loggerInstance","resolve","createLogger","addListener","exception","error","exit","info"],"mappings":";;AACA;;AAKA;;;;AACA;;;;AACA;;AACA;;;;AANA;AACAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuBF,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,KAA/C,C,CAJA;;;AAWA,MAAMC,OAAOC,iBAAOC,GAAP,CAAW,aAAX,CAAb;AACA,MAAMC,YAAYC,uCAAmBC,eAAnB,EAAlB;AACA,MAAMC,cAAc,IAAIC,QAAJ,CAAQJ,SAAR,CAApB;AACA,MAAMK,SAASC,eAAKC,YAAL,CAAkBJ,WAAlB,CAAf;;AAEAE,OAAOG,MAAP,CAAcX,IAAd,EAAoB,MAAM;AACtB,UAAMY,UAAUJ,OAAOI,OAAP,EAAhB;AACA,UAAMC,iBAAiBV,UAAUW,OAAV,CAAkB,eAAlB,EAAmCC,YAAnC,EAAvB;;AAEAlB,YAAQmB,WAAR,CAAoB,oBAApB,EAA0CC,aAAa;AACnDJ,uBAAeK,KAAf,CAAqB,sBAArB,EAA6CD,SAA7C;AACA;AACApB,gBAAQsB,IAAR,CAAa,CAAb;AACH,KAJD;;AAMA,QAAI,OAAOP,OAAP,KAAmB,QAAvB,EAAiC;AAC7BC,uBAAeO,IAAf,CAAqB,oCAAmCR,OAAQ,EAAhE;AACH,KAFD,MAEO;AACHC,uBAAeO,IAAf,CACK,oCAAmCR,QAAQZ,IAAK,OADrD;AAGH;AACJ,CAjBD","file":"main.js","sourcesContent":["// eslint-disable-next-line node/no-extraneous-import\nimport 'source-map-support/register';\n\n// normalize NODE_ENV variable\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'dev';\n\nimport http from 'http';\nimport config from 'config';\nimport { App } from './routes/App';\nimport { DIContainerFactory } from './DIContainerFactory';\n\nconst port = config.get('server.port');\nconst container = DIContainerFactory.createContainer();\nconst application = new App(container);\nconst server = http.createServer(application);\n\nserver.listen(port, () => {\n    const address = server.address();\n    const loggerInstance = container.resolve('LoggerFactory').createLogger();\n\n    process.addListener('unhandledRejection', exception => {\n        loggerInstance.error('Unhandled Rejection:', exception);\n        // eslint-disable-next-line no-process-exit\n        process.exit(1);\n    });\n\n    if (typeof address === 'string') {\n        loggerInstance.info(`Application has been launched on ${address}`);\n    } else {\n        loggerInstance.info(\n            `Application has been launched on ${address.port} port`\n        );\n    }\n});\n"]}