{"version":3,"sources":["../../../src/models/userAvailability/UserAvailabilityDto.js"],"names":["UserAvailabilityDto","BaseDto","constructor","userAvailability","connections","connectionsModel","get","availableFor","availableForModel","number","id","availabilityType","userAvailabilityTypes","filter","item","name","schema","title","type","nullable","allOf","required","properties","example","AutocompleteDto"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;AAGO,MAAMA,mBAAN,SAAkCC,gBAAlC,CAA0C;AAC7C;;;AAGAC,gBAAYC,gBAAZ,EAA8B;AAC1B,cAAMA,gBAAN;;AAEA;;;AAGA,aAAKC,WAAL,GAAmBJ,oBAAoBK,gBAApB,CAAqCF,iBAAiBG,GAAjB,CAAqB,aAArB,CAArC,CAAnB;;AAEA;;;AAGA,aAAKC,YAAL,GAAoBP,oBAAoBQ,iBAApB,CAAsCL,iBAAiBG,GAAjB,CAAqB,cAArB,CAAtC,CAApB;AACH;;AAED,WAAOD,gBAAP,CAAwBI,MAAxB,EAAgC;AAC5B,eAAOA,WAAW,IAAX,GAAkB,IAAlB,GAAyBA,MAAhC;AACH;;AAED,WAAOD,iBAAP,CAAyBE,EAAzB,EAA6B;AACzB,YAAI,CAACA,EAAL,EAAS;AACL,mBAAO,IAAP;AACH;;AAED,cAAMC,mBAAmBC,iCAAsBC,MAAtB,CAA6BC,QAAQA,KAAKJ,EAAL,KAAYA,EAAjD,CAAzB;AACA,eAAO;AACHA,cADG;AAEHK,kBAAMJ,iBAAiB,CAAjB,EAAoBI;AAFvB,SAAP;AAIH;;AAED,eAAWC,MAAX,GAAoB;AAChB,eAAO;AACHC,mBAAO,yBADJ;AAEHC,kBAAM,QAFH;AAGHC,sBAAU,IAHP;AAIHC,mBAAO,CACH,MAAMJ,MADH,EAEH;AACIE,sBAAM,QADV;AAEIG,0BAAU,EAFd;AAIIC,4BAAY;AACRlB,iCAAa;AACTc,8BAAM,CAAC,QAAD,EAAW,MAAX,CADG;AAETK,iCAAS;AAFA,qBADL;AAKRhB,kCAAciB,iCAAgBR;AALtB;AAJhB,aAFG;AAJJ,SAAP;AAoBH;AAvD4C;QAApChB,mB,GAAAA,mB","file":"UserAvailabilityDto.js","sourcesContent":["import { BaseDto } from './../../base/BaseDto';\nimport { AutocompleteDto } from '../autocomplete/AutocompleteDto';\nimport { userAvailabilityTypes } from '../../resources/users/UserTypes';\n\n/**\n * @extends BaseDto\n */\nexport class UserAvailabilityDto extends BaseDto {\n    /**\n     * @param {UserAvailabilityInstance} userAvailability\n     */\n    constructor(userAvailability) {\n        super(userAvailability);\n\n        /**\n         * @type {integer}\n         */\n        this.connections = UserAvailabilityDto.connectionsModel(userAvailability.get('connections'));\n\n        /**\n         * @type {string}\n         */\n        this.availableFor = UserAvailabilityDto.availableForModel(userAvailability.get('availableFor'));\n    }\n\n    static connectionsModel(number) {\n        return number === null ? null : number;\n    }\n\n    static availableForModel(id) {\n        if (!id) {\n            return null;\n        }\n\n        const availabilityType = userAvailabilityTypes.filter(item => item.id === id);\n        return {\n            id,\n            name: availabilityType[0].name\n        };\n    }\n\n    static get schema() {\n        return {\n            title: 'UserCompensationsSchema',\n            type: 'object',\n            nullable: true,\n            allOf: [\n                super.schema,\n                {\n                    type: 'object',\n                    required: [\n                    ],\n                    properties: {\n                        connections: {\n                            type: ['number', 'null'],\n                            example: 10\n                        },\n                        availableFor: AutocompleteDto.schema\n                    }\n                }\n            ]\n        };\n    }\n}\n"]}