{"version":3,"sources":["../../../src/models/studentSchools/StudentSchoolsDto.js"],"names":["StudentSchoolsDto","constructor","studentSchools","length","data","map","studentSchool","StudentSchoolDto","schema","title","type","required","properties","items"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,iBAAN,CAAwB;AAC3B;;;AAGAC,gBAAYC,cAAZ,EAA4B;;AAExB;;;AAGA,YAAGA,eAAeC,MAAlB,EAA0B;AACtB,iBAAKC,IAAL,GAAYF,eAAeG,GAAf,CAAmBC,iBAAiB,IAAIC,kCAAJ,CAAqBD,aAArB,CAApC,CAAZ;AACH,SAFD,MAEO;AACH,iBAAKF,IAAL,GAAY,EAAZ;AACH;AACJ;;AAED,eAAWI,MAAX,GAAoB;AAChB,eAAO;AACHC,mBAAO,sBADJ;AAEHC,kBAAM,QAFH;AAGHC,sBAAU,CACN,MADM,CAHP;AAMHC,wBAAY;AACRR,sBAAM;AACFM,0BAAM,OADJ;AAEFG,2BAAON,mCAAiBC;AAFtB;AADE;AANT,SAAP;AAaH;AA9B0B;QAAlBR,iB,GAAAA,iB","file":"StudentSchoolsDto.js","sourcesContent":["import { StudentSchoolDto } from './StudentSchoolDto';\n\nexport class StudentSchoolsDto {\n    /**\n     * @param {array} studentSchools\n     */\n    constructor(studentSchools) {\n\n        /**\n         * @type {object}\n         */\n        if(studentSchools.length) {\n            this.data = studentSchools.map(studentSchool => new StudentSchoolDto(studentSchool));\n        } else {\n            this.data = [];\n        }\n    }\n\n    static get schema() {\n        return {\n            title: 'StudentSchoolsSchema',\n            type: 'object',\n            required: [\n                'data',\n            ],\n            properties: {\n                data: {\n                    type: 'array',\n                    items: StudentSchoolDto.schema\n                }\n            }\n        };\n    }\n}\n"]}