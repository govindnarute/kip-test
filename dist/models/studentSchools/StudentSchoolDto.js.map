{"version":3,"sources":["../../../src/models/studentSchools/StudentSchoolDto.js"],"names":["StudentSchoolDto","BaseDto","constructor","studentSchool","school","BaseSchoolParamsDto","baseModel","get","degree","location","fieldOfStudy","isCurrent","fromYear","toYear","schoolArray","data","length","map","schema","title","type","allOf","required","properties","default","nullable","example"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;AAGO,MAAMA,gBAAN,SAA+BC,gBAA/B,CAAuC;AAC1C;;;AAGAC,gBAAYC,aAAZ,EAA2B;AACvB,cAAMA,aAAN;;AAEA;;;AAGA,aAAKC,MAAL,GAAcC,yCAAoBC,SAApB,CAA8BH,cAAcI,GAAd,CAAkB,QAAlB,CAA9B,CAAd;;AAEA;;;AAGA,aAAKC,MAAL,GAAcH,yCAAoBC,SAApB,CAA8BH,cAAcI,GAAd,CAAkB,QAAlB,CAA9B,CAAd;;AAEA;;;AAGA,aAAKE,QAAL,GAAgBJ,yCAAoBC,SAApB,CAA8BH,cAAcI,GAAd,CAAkB,UAAlB,CAA9B,CAAhB;;AAEA;;;AAGA,aAAKG,YAAL,GAAoBL,yCAAoBC,SAApB,CAA8BH,cAAcI,GAAd,CAAkB,cAAlB,CAA9B,CAApB;;AAEA;;;AAGA,aAAKI,SAAL,GAAiBR,cAAcI,GAAd,CAAkB,WAAlB,CAAjB;;AAEA;;;AAGA,aAAKK,QAAL,GAAgBT,cAAcI,GAAd,CAAkB,UAAlB,CAAhB;;AAEA;;;AAGA,aAAKM,MAAL,GAAcV,cAAcI,GAAd,CAAkB,QAAlB,CAAd;AACH;;AAED,WAAOO,WAAP,CAAmBC,IAAnB,EAAyB;AACrB,YAAI,CAACA,KAAKC,MAAV,EAAkB;AACd,mBAAO,EAAP;AACH;;AAED,eAAOD,KAAKE,GAAL,CAASd,iBAAiB,IAAIH,gBAAJ,CAAqBG,aAArB,CAA1B,CAAP;AACH;;AAED,eAAWe,MAAX,GAAoB;AAChB,eAAO;AACHC,mBAAO,qBADJ;AAEHC,kBAAM,QAFH;AAGHC,mBAAO,CACH,MAAMH,MADH,EAEH;AACIE,sBAAM,QADV;AAEIE,0BAAU,EAFd;AAIIC,4BAAY;AACRnB,4BAAQC,yCAAoBa,MADpB;AAERV,4BAAQH,yCAAoBa,MAFpB;AAGRT,8BAAUJ,yCAAoBa,MAHtB;AAIRR,kCAAcL,yCAAoBa,MAJ1B;AAKRP,+BAAW;AACPS,8BAAM,SADC;AAEPI,iCAAS;AAFF,qBALH;AASRZ,8BAAU;AACNQ,8BAAM,QADA;AAENK,kCAAU,IAFJ;AAGNC,iCAAS;AAHH,qBATF;AAcRb,4BAAQ;AACJO,8BAAM,QADF;AAEJK,kCAAU,IAFN;AAGJC,iCAAS;AAHL;AAdA;AAJhB,aAFG;AAHJ,SAAP;AAgCH;AApFyC;QAAjC1B,gB,GAAAA,gB","file":"StudentSchoolDto.js","sourcesContent":["import { BaseDto } from './../../base/BaseDto';\nimport { BaseSchoolParamsDto } from './BaseSchoolParamsDto';\n\n/**\n * @extends BaseDto\n */\nexport class StudentSchoolDto extends BaseDto {\n    /**\n     * @param {StudentSchoolInstance} studentSchool\n     */\n    constructor(studentSchool) {\n        super(studentSchool);\n\n        /**\n         * @type {number}\n         */\n        this.school = BaseSchoolParamsDto.baseModel(studentSchool.get('school'));\n\n        /**\n         * @type {number}\n         */\n        this.degree = BaseSchoolParamsDto.baseModel(studentSchool.get('degree'));\n\n        /**\n         * @type {number}\n         */\n        this.location = BaseSchoolParamsDto.baseModel(studentSchool.get('location'));\n\n        /**\n         * @type {number}\n         */\n        this.fieldOfStudy = BaseSchoolParamsDto.baseModel(studentSchool.get('fieldOfStudy'));\n\n        /**\n         * @type {boolean}\n         */\n        this.isCurrent = studentSchool.get('isCurrent');\n\n        /**\n         * @type {number}\n         */\n        this.fromYear = studentSchool.get('fromYear');\n\n        /**\n         * @type {number}\n         */\n        this.toYear = studentSchool.get('toYear');\n    }\n\n    static schoolArray(data) {\n        if (!data.length) {\n            return [];\n        }\n\n        return data.map(studentSchool => new StudentSchoolDto(studentSchool));\n    }\n\n    static get schema() {\n        return {\n            title: 'StudentSchoolSchema',\n            type: 'object',\n            allOf: [\n                super.schema,\n                {\n                    type: 'object',\n                    required: [\n                    ],\n                    properties: {\n                        school: BaseSchoolParamsDto.schema,\n                        degree: BaseSchoolParamsDto.schema,\n                        location: BaseSchoolParamsDto.schema,\n                        fieldOfStudy: BaseSchoolParamsDto.schema,\n                        isCurrent: {\n                            type: 'boolean',\n                            default: false,\n                        },\n                        fromYear: {\n                            type: 'number',\n                            nullable: true,\n                            example: 1\n                        },\n                        toYear: {\n                            type: 'number',\n                            nullable: true,\n                            example: 1\n                        }\n                    }\n                }\n            ]\n        };\n    }\n}\n"]}