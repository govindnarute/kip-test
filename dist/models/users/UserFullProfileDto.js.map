{"version":3,"sources":["../../../src/models/users/UserFullProfileDto.js"],"names":["UserFullProfileDto","UserDto","constructor","userProfile","professional","get","UserProfessionalDto","coach","UserCoachDto","school","StudentSchoolDto","schoolArray","compensation","UserCompensationsDto","availability","UserAvailabilityDto","schema","title","type","allOf","required","properties","items"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;AAGO,MAAMA,kBAAN,SAAiCC,gBAAjC,CAAyC;AAC9CC,cAAYC,WAAZ,EAAyB;AACvB,UAAMA,WAAN;AACA;;;AAGA,SAAKC,YAAL,GAAoBD,YAAYE,GAAZ,CAAgB,kBAAhB,IAChB,IAAIC,sCAAJ,CAAwBH,YAAYE,GAAZ,CAAgB,kBAAhB,CAAxB,CADgB,GAEhB,IAFJ;;AAIA;;;AAGA,SAAKE,KAAL,GAAaJ,YAAYE,GAAZ,CAAgB,WAAhB,IACT,IAAIG,yBAAJ,CAAiBL,YAAYE,GAAZ,CAAgB,WAAhB,CAAjB,CADS,GAET,IAFJ;;AAIA;;;AAGA,SAAKI,MAAL,GAAcN,YAAYE,GAAZ,CAAgB,eAAhB,IACVK,iCAAiBC,WAAjB,CAA6BR,YAAYE,GAAZ,CAAgB,eAAhB,CAA7B,CADU,GAEV,EAFJ;;AAIA;;;AAGA,SAAKO,YAAL,GAAoBT,YAAYE,GAAZ,CAAgB,kBAAhB,IAChB,IAAIQ,0CAAJ,CAAyBV,YAAYE,GAAZ,CAAgB,kBAAhB,CAAzB,CADgB,GAEhB,IAFJ;;AAIA;;;AAGA,SAAKS,YAAL,GAAoBX,YAAYE,GAAZ,CAAgB,kBAAhB,IAChB,IAAIU,wCAAJ,CAAwBZ,YAAYE,GAAZ,CAAgB,kBAAhB,CAAxB,CADgB,GAEhB,IAFJ;AAGD;;AAED,aAAWW,MAAX,GAAoB;AAClB,WAAO;AACLC,aAAO,uBADF;AAELC,YAAM,QAFD;AAGLC,aAAO,CACL,MAAMH,MADD,EAEL;AACEE,cAAM,QADR;AAEEE,kBAAU,EAFZ;AAGEC,oBAAY;AACVjB,wBAAcE,uCAAoBU,MADxB;AAEVT,iBAAOC,0BAAaQ,MAFV;AAGVP,kBAAQ;AACNS,kBAAM,OADA;AAENI,mBAAOZ,iCAAiBM;AAFlB,WAHE;AAOVJ,wBAAcC,2CAAqBG,MAPzB;AAQVF,wBAAcC,yCAAoBC;AARxB;AAHd,OAFK;AAHF,KAAP;AAqBD;AA7D6C;QAAnChB,kB,GAAAA,kB","file":"UserFullProfileDto.js","sourcesContent":["import { UserDto } from \"./UserDto\";\nimport { UserProfessionalDto } from \"../userProfessionals\";\nimport { UserCoachDto } from \"../userCoaches\";\nimport { StudentSchoolDto } from \"../studentSchools\";\nimport { UserCompensationsDto } from \"../userCompensations/UserCompensationsDto\";\nimport { UserAvailabilityDto } from \"../userAvailability/UserAvailabilityDto\";\n\n/**\n * @extends UserDto\n */\nexport class UserFullProfileDto extends UserDto {\n  constructor(userProfile) {\n    super(userProfile);\n    /**\n     * @type {object}\n     */\n    this.professional = userProfile.get(\"userProfessional\")\n      ? new UserProfessionalDto(userProfile.get(\"userProfessional\"))\n      : null;\n\n    /**\n     * @type {object}\n     */\n    this.coach = userProfile.get(\"userCoach\")\n      ? new UserCoachDto(userProfile.get(\"userCoach\"))\n      : null;\n\n    /**\n     * @type {object}\n     */\n    this.school = userProfile.get(\"studentSchool\")\n      ? StudentSchoolDto.schoolArray(userProfile.get(\"studentSchool\"))\n      : [];\n\n    /**\n     * @type {object}\n     */\n    this.compensation = userProfile.get(\"userCompensation\")\n      ? new UserCompensationsDto(userProfile.get(\"userCompensation\"))\n      : null;\n\n    /**\n     * @type {object}\n     */\n    this.availability = userProfile.get(\"userAvailability\")\n      ? new UserAvailabilityDto(userProfile.get(\"userAvailability\"))\n      : null;\n  }\n\n  static get schema() {\n    return {\n      title: \"UserFullProfileSchema\",\n      type: \"object\",\n      allOf: [\n        super.schema,\n        {\n          type: \"object\",\n          required: [],\n          properties: {\n            professional: UserProfessionalDto.schema,\n            coach: UserCoachDto.schema,\n            school: {\n              type: \"array\",\n              items: StudentSchoolDto.schema\n            },\n            compensation: UserCompensationsDto.schema,\n            availability: UserAvailabilityDto.schema\n          }\n        }\n      ]\n    };\n  }\n}\n"]}