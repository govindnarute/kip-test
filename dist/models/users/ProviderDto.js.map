{"version":3,"sources":["../../../src/models/users/ProviderDto.js"],"names":["ProviderDto","constructor","user","id","firstName","lastName","headline","summary","avatar","ImageDto","linkByAuthorIdAndName","industries","location","schema","title","type","allOf","required","properties","example","items"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,WAAN,CAAkB;;AAErBC,gBAAYC,IAAZ,EAAkB;AACd;;;AAGA,aAAKC,EAAL,GAAUD,KAAK,IAAL,CAAV;;AAEA;;;AAGA,aAAKE,SAAL,GAAiBF,KAAK,WAAL,CAAjB;;AAEA;;;AAGA,aAAKG,QAAL,GAAgBH,KAAK,UAAL,CAAhB;;AAEA;;;AAGA,aAAKI,QAAL,GAAgBJ,KAAK,UAAL,CAAhB;;AAEA;;;AAGA,aAAKK,OAAL,GAAeL,KAAK,SAAL,CAAf;;AAEA;;;AAGA,aAAKM,MAAL,GAAcN,KAAK,QAAL,KAAkBO,iBAASC,qBAAT,CAA+B,KAAKP,EAApC,EAAwCD,KAAK,QAAL,CAAxC,CAAhC;;AAGA;;;AAGA,aAAKS,UAAL,GAAkBT,KAAK,YAAL,IAAqBA,KAAK,YAAL,CAArB,GAA0C,EAA5D;;AAEA;;;AAGA,aAAKU,QAAL,GAAgBV,KAAK,UAAL,CAAhB;AACH;;AAED,eAAWW,MAAX,GAAoB;AAChB,eAAO;AACHC,mBAAO,aADJ;AAEHC,kBAAM,QAFH;AAGHC,mBAAO,CACH;AACID,sBAAM,QADV;AAEIE,0BAAU,EAFd;AAIIC,4BAAY;AACRf,wBAAI;AACAY,8BAAM;AADN,qBADI;AAIRX,+BAAW;AACPW,8BAAM,QADC;AAEPI,iCAAS;AAFF,qBAJH;AAQRd,8BAAU;AACNU,8BAAM,QADA;AAENI,iCAAS;AAFH,qBARF;AAYRZ,6BAAS;AACLQ,8BAAM;AADD,qBAZD;AAeRP,4BAAQ;AACJO,8BAAM;AADF,qBAfA;AAkBRJ,gCAAY;AACRI,8BAAM,OADE;AAERK,+BAAO;AACHL,kCAAM;AADH;AAFC,qBAlBJ;AAwBRH,8BAAU;AACNG,8BAAM;AADA,qBAxBF;AA2BRT,8BAAU;AACNS,8BAAM;AADA;AA3BF;AAJhB,aADG;AAHJ,SAAP;AA0CH;AAxFoB;QAAZf,W,GAAAA,W","file":"ProviderDto.js","sourcesContent":["import { ImageDto } from '../images';\n\nexport class ProviderDto {\n\n    constructor(user) {\n        /**\n         * @type {number}\n         */\n        this.id = user[\"id\"];\n\n        /**\n         * @type {string}\n         */\n        this.firstName = user[\"firstName\"];\n\n        /**\n         * @type {string}\n         */\n        this.lastName = user[\"lastName\"];\n\n        /**\n         * @type {string}\n         */\n        this.headline = user[\"headline\"];\n\n        /**\n         * @type {string}\n         */\n        this.summary = user[\"summary\"];\n\n        /**\n         * @type {string}\n         */\n        this.avatar = user[\"avatar\"] && ImageDto.linkByAuthorIdAndName(this.id, user[\"avatar\"]);\n\n\n        /**\n         * @type {string}\n         */\n        this.industries = user[\"industries\"] ? user[\"industries\"] : [];\n\n        /**\n         * @type {string}\n         */\n        this.location = user[\"location\"];\n    }\n\n    static get schema() {\n        return {\n            title: 'ProviderDto',\n            type: 'object',\n            allOf: [\n                {\n                    type: 'object',\n                    required: [\n                    ],\n                    properties: {\n                        id: {\n                            type: \"number\"\n                        },\n                        firstName: {\n                            type: 'string',\n                            example: 'User First Name'\n                        },\n                        lastName: {\n                            type: 'string',\n                            example: 'User Last Name'\n                        },\n                        summary: {\n                            type: 'string',\n                        },\n                        avatar: {\n                            type: 'string',\n                        },\n                        industries: {\n                            type: \"array\",\n                            items: {\n                                type: 'string'\n                            }\n                        },\n                        location: {\n                            type: \"string\"\n                        },\n                        headline: {\n                            type: \"string\"\n                        }\n                    }\n                }\n            ]\n        };\n    }\n}\n"]}