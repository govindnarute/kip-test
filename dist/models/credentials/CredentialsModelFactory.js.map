{"version":3,"sources":["../../../src/models/credentials/CredentialsModelFactory.js"],"names":["CredentialsModelFactory","define","sequelize","ModelDefinitionBuilder","properties","name","type","Sequelize","STRING","allowNull","isShown","BOOLEAN","defaultValue","Object","assign","options","scopes","search","q","where","Op","like","byIds","ids","id","in","onlyForShow"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAQA;;;;AAIA;;;;AAIO,MAAMA,uBAAN,CAA8B;AACjC;;;;AAIA,WAAOC,MAAP,CAAcC,SAAd,EAAyB;AACrB;;;AAGA,eAAOA,UAAUD,MAAV,CACH,YADG,EAEHE,+CAAuBC,UAAvB,CAAkC;;AAE9BC,kBAAM;AACFC,sBAAMJ,UAAUK,SAAV,CAAoBC,MAApB,CAA2B,GAA3B,CADJ;AAEFC,2BAAW;AAFT,aAFwB;;AAO9BC,qBAAS;AACLJ,sBAAMJ,UAAUK,SAAV,CAAoBI,OADrB;AAELC,8BAAc,IAFT;AAGLH,2BAAW;AAHN;;AAPqB,SAAlC,CAFG,EAgBHI,OAAOC,MAAP,CAAcX,+CAAuBY,OAAvB,CAA+B,aAA/B,CAAd,EAA6D;AACzDC,oBAAQH,OAAOC,MAAP,CAAcX,+CAAuBa,MAAvB,EAAd,EAA+C;AACnDC,wBAASC,CAAD,KAAO;AACXC,2BAAO;AACHd,8BAAM;AACF,6BAACe,cAAGC,IAAJ,GAAY,IAAGH,CAAE;AADf;AADH;AADI,iBAAP,CAD2C;AAQnDI,uBAAO,CAACC,MAAM,EAAP,MAAe;AAClBJ,2BAAO;AACHK,4BAAI;AACA,6BAACJ,cAAGK,EAAJ,GAASF;AADT;AADD;AADW,iBAAf,CAR4C;AAenDG,6BAAa,OAAO;AAChBP,2BAAO;AACHT,iCAAS;AADN;AADS,iBAAP;AAfsC,aAA/C;AADiD,SAA7D,CAhBG,CAAP;AAwCH;AAjDgC;QAAxBV,uB,GAAAA,uB","file":"CredentialsModelFactory.js","sourcesContent":["import { Op } from 'sequelize';\nimport { ModelDefinitionBuilder } from '../../base/ModelDefinitionBuilder';\n\n/**\n * @typedef {Object} CredentialsInstanceAttributes\n * @property {number} id\n * @property {string} name\n * @property {number} createdAt\n * @property {number} updatedAt\n */\n\n/**\n * @typedef {sequelize.Instance<CredentialsInstanceAttributes>} CredentialsInstance\n */\n\n/**\n * @typedef {sequelize.Model<CredentialsInstance>} CredentialsModel\n */\n\nexport class CredentialsModelFactory {\n    /**\n     * @param {sequelize.Sequelize} sequelize\n     * @return {CredentialsModel}\n     */\n    static define(sequelize) {\n        /**\n         * @type {CredentialsModel}\n         */\n        return sequelize.define(\n            'Credential',\n            ModelDefinitionBuilder.properties({\n\n                name: {\n                    type: sequelize.Sequelize.STRING(100),\n                    allowNull: false,\n                },\n\n                isShown: {\n                    type: sequelize.Sequelize.BOOLEAN,\n                    defaultValue: true,\n                    allowNull: false,\n                },\n\n            }),\n            Object.assign(ModelDefinitionBuilder.options('credentials'), {\n                scopes: Object.assign(ModelDefinitionBuilder.scopes(), {\n                    search: (q) =>({\n                        where: {\n                            name: {\n                                [Op.like]: `%${q}%`\n                            }\n                        }\n                    }),\n                    byIds: (ids = []) => ({\n                        where: {\n                            id: {\n                                [Op.in]: ids\n                            }\n                        }\n                    }),\n                    onlyForShow: () => ({\n                        where: {\n                            isShown: true\n                        }\n                    })\n                }),\n            })\n        );\n    }\n}\n"]}