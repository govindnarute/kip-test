{"version":3,"sources":["../../../src/models/verificationTokens/VerificationTokenModelFactory.js"],"names":["VerificationTokenModelFactory","define","sequelize","ModelDefinitionBuilder","properties","userId","type","Sequelize","INTEGER","allowNull","TINYINT","defaultValue","tokenTypes","verification","isUsed","BOOLEAN","attempt","token","STRING","Object","assign","options","scopes","byType","where","byUser"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AAUA;;;;AAIA;;;;AAIO,MAAMA,6BAAN,CAAoC;AACvC;;;;AAIA,WAAOC,MAAP,CAAcC,SAAd,EAAyB;AACrB;;;AAGA,eAAOA,UAAUD,MAAV,CACH,mBADG,EAEHE,+CAAuBC,UAAvB,CAAkC;AAC9BC,oBAAQ;AACJC,sBAAMJ,UAAUK,SAAV,CAAoBC,OADtB;AAEJC,2BAAW;AAFP,aADsB;;AAM9BH,kBAAM;AACFA,sBAAMJ,UAAUK,SAAV,CAAoBG,OADxB;AAEFC,8BAAcC,kBAAWC,YAFvB;AAGFJ,2BAAW;AAHT,aANwB;;AAY9BK,oBAAQ;AACJR,sBAAMJ,UAAUK,SAAV,CAAoBQ,OADtB;AAEJJ,8BAAc,KAFV;AAGJF,2BAAW;AAHP,aAZsB;;AAkB9BO,qBAAS;AACLV,sBAAMJ,UAAUK,SAAV,CAAoBG,OADrB;AAELC,8BAAc,CAFT;AAGLF,2BAAW;AAHN,aAlBqB;;AAwB9BQ,mBAAO;AACHX,sBAAMJ,UAAUK,SAAV,CAAoBW,MAApB,CAA2B,GAA3B,CADH;AAEHT,2BAAW;AAFR;AAxBuB,SAAlC,CAFG,EA+BHU,OAAOC,MAAP,CAAcjB,+CAAuBkB,OAAvB,CAA+B,oBAA/B,CAAd,EAAoE;AAChEC,oBAAQ;AACJC,wBAASjB,SAAS;AACdkB,2BAAO;AACHlB;AADG;AADO,iBAAT,CADL;AAMJmB,wBAAQpB,WAAW;AACfmB,2BAAO;AACHnB;AADG;AADQ,iBAAX;AANJ;AADwD,SAApE,CA/BG,CAAP;AA8CH;AAvDsC;QAA9BL,6B,GAAAA,6B","file":"VerificationTokenModelFactory.js","sourcesContent":["import { ModelDefinitionBuilder } from '../../base/ModelDefinitionBuilder';\nimport { tokenTypes } from '../../resources/users';\n\n/**\n * @typedef {Object} VerificationTokenInstanceAttributes\n * @property {number} id\n * @property {string} token\n * @property {number} type\n * @property {number} attempt\n * @property {number} createdAt\n * @property {number} updatedAt\n */\n\n/**\n * @typedef {sequelize.Instance<VerificationTokenInstanceAttributes>} VerificationTokenInstance\n */\n\n/**\n * @typedef {sequelize.Model<VerificationTokenInstance, VerificationTokenInstanceAttributes>} VerificationTokenModel\n */\n\nexport class VerificationTokenModelFactory {\n    /**\n     * @param {sequelize.Sequelize} sequelize\n     * @return {VerificationTokenModel}\n     */\n    static define(sequelize) {\n        /**\n         * @type {VerificationTokenModel}\n         */\n        return sequelize.define(\n            'VerificationToken',\n            ModelDefinitionBuilder.properties({\n                userId: {\n                    type: sequelize.Sequelize.INTEGER,\n                    allowNull: false,\n                },\n\n                type: {\n                    type: sequelize.Sequelize.TINYINT,\n                    defaultValue: tokenTypes.verification,\n                    allowNull: false,\n                },\n\n                isUsed: {\n                    type: sequelize.Sequelize.BOOLEAN,\n                    defaultValue: false,\n                    allowNull: false,\n                },\n\n                attempt: {\n                    type: sequelize.Sequelize.TINYINT,\n                    defaultValue: 0,\n                    allowNull: false,\n                },\n\n                token: {\n                    type: sequelize.Sequelize.STRING(255),\n                    allowNull: false,\n                },\n            }),\n            Object.assign(ModelDefinitionBuilder.options('verificationTokens'), {\n                scopes: {\n                    byType:  type => ({\n                        where: {\n                            type,\n                        }\n                    }),\n                    byUser: userId => ({\n                        where: {\n                            userId,\n                        }\n                    })\n                }\n            })\n        );\n    }\n}\n"]}