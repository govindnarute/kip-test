{"version":3,"sources":["../../src/models/DatabaseInjector.js"],"names":["DatabaseInjector","injectModels","DBConnection","models","UserModelFactory","VerificationTokenModelFactory","SocialsModelFactory","ImagesModelFactory","UsersImageModelFactory","LocationsModelFactory","SchoolsModelFactory","DegreesModelFactory","FieldOfStudyModelFactory","StudentSchoolsModelFactory","CompaniesModelFactory","IndustriesModelFactory","FunctionsModelFactory","ExpertiseModelFactory","CredentialsModelFactory","UserProfessionalsModelFactory","ProfessionalFunctionsModelFactory","ProfessionalIndustriesModelFactory","ProfessionalCompaniesModelFactory","UserCoachesModelFactory","CoachExpertiseModelFactory","UserCompensationsModelFactory","UserAvailabilityModelFactory","CoachCredentialsModelFactory","map","ModelFactory","define","forEach","model","associate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,gBAAN,CAAuB;AAC1B,WAAOC,YAAP,CAAoBC,YAApB,EAAkC;AAC9B,cAAMC,SAAS,CACXC,uBADW,EAEXC,iDAFW,EAGXC,4BAHW,EAIXC,0BAJW,EAKXC,mCALW,EAMXC,gCANW,EAOXC,4BAPW,EAQXC,4BARW,EASXC,uCATW,EAUXC,0CAVW,EAWXC,gCAXW,EAYXC,kCAZW,EAaXC,gCAbW,EAcXC,gCAdW,EAeXC,oCAfW,EAgBXC,gDAhBW,EAiBXC,wDAjBW,EAkBXC,0DAlBW,EAmBXC,wDAnBW,EAoBXC,oCApBW,EAqBXC,0CArBW,EAsBXC,gDAtBW,EAuBXC,8CAvBW,EAwBXC,0DAxBW,CAAf;;AA2BAxB,eACKyB,GADL,CACUC,YAAD,IAAkBA,aAAaC,MAAb,CAAoB5B,YAApB,CAD3B,EAEK6B,OAFL,CAEcC,KAAD,IAAW;AAChB,gBAAI,eAAeA,KAAnB,EAA0B;AACtBA,sBAAMC,SAAN;AACH;AACJ,SANL;AAOH;AApCyB;QAAjBjC,gB,GAAAA,gB","file":"DatabaseInjector.js","sourcesContent":["import { UserModelFactory } from './users';\nimport { VerificationTokenModelFactory } from './verificationTokens';\nimport { SocialsModelFactory } from './socials';\nimport { ImagesModelFactory } from './images';\nimport { UsersImageModelFactory } from './usersImages';\nimport { LocationsModelFactory } from './locations';\nimport { SchoolsModelFactory } from './schools';\nimport { DegreesModelFactory } from './degrees';\nimport { FieldOfStudyModelFactory } from './fieldsOfStudy';\nimport { StudentSchoolsModelFactory } from './studentSchools';\nimport { CompaniesModelFactory } from './companies';\nimport { IndustriesModelFactory } from './industries';\nimport { FunctionsModelFactory } from './functions';\nimport { ExpertiseModelFactory } from './expertise';\nimport { CredentialsModelFactory } from './credentials';\nimport { UserProfessionalsModelFactory } from './userProfessionals';\nimport { ProfessionalFunctionsModelFactory } from './professionalFunctions';\nimport { ProfessionalIndustriesModelFactory } from './professionalIndustries';\nimport { ProfessionalCompaniesModelFactory } from './professionalCompanies';\nimport { UserCoachesModelFactory } from './userCoaches';\nimport { CoachExpertiseModelFactory } from './coachExpertise';\nimport { UserCompensationsModelFactory } from './userCompensations';\nimport { UserAvailabilityModelFactory } from './userAvailability';\nimport { CoachCredentialsModelFactory } from './coachCredentials/CoachCredentialsModelFactory';\n\nexport class DatabaseInjector {\n    static injectModels(DBConnection) {\n        const models = [\n            UserModelFactory,\n            VerificationTokenModelFactory,\n            SocialsModelFactory,\n            ImagesModelFactory,\n            UsersImageModelFactory,\n            LocationsModelFactory,\n            SchoolsModelFactory,\n            DegreesModelFactory,\n            FieldOfStudyModelFactory,\n            StudentSchoolsModelFactory,\n            CompaniesModelFactory,\n            IndustriesModelFactory,\n            FunctionsModelFactory,\n            ExpertiseModelFactory,\n            CredentialsModelFactory,\n            UserProfessionalsModelFactory,\n            ProfessionalFunctionsModelFactory,\n            ProfessionalIndustriesModelFactory,\n            ProfessionalCompaniesModelFactory,\n            UserCoachesModelFactory,\n            CoachExpertiseModelFactory,\n            UserCompensationsModelFactory,\n            UserAvailabilityModelFactory,\n            CoachCredentialsModelFactory\n        ];\n\n        models\n            .map((ModelFactory) => ModelFactory.define(DBConnection))\n            .forEach((model) => {\n                if ('associate' in model) {\n                    model.associate();\n                }\n            });\n    }\n}\n"]}