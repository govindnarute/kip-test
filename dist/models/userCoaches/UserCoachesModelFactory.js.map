{"version":3,"sources":["../../../src/models/userCoaches/UserCoachesModelFactory.js"],"names":["UserCoachesModelFactory","define","sequelize","UserCoaches","ModelDefinitionBuilder","properties","userId","type","Sequelize","INTEGER","allowNull","yearOfExperience","FLOAT","Object","assign","options","scopes","withExpertise","include","model","as","through","attributes","withCredential","associate","belongsToMany","foreignKey","otherKey"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;AAQA;;;;AAIA;;;;AAIO,MAAMA,uBAAN,CAA8B;AACjC;;;;AAIA,WAAOC,MAAP,CAAcC,SAAd,EAAyB;AACrB;;;AAGA,cAAMC,cAAcD,UAAUD,MAAV,CAChB,WADgB,EAEhBG,+CAAuBC,UAAvB,CAAkC;;AAE9BC,oBAAQ;AACJC,sBAAML,UAAUM,SAAV,CAAoBC,OADtB;AAEJC,2BAAW;AAFP,aAFsB;;AAO9BC,8BAAkB;AACdJ,sBAAML,UAAUM,SAAV,CAAoBI,KADZ;AAEdF,2BAAW;AAFG;;AAPY,SAAlC,CAFgB,EAehBG,OAAOC,MAAP,CAAcV,+CAAuBW,OAAvB,CAA+B,aAA/B,CAAd,EAA6D;AACzDC,oBAAQH,OAAOC,MAAP,CAAcV,+CAAuBY,MAAvB,EAAd,EAA+C;AACnDC,+BAAe,OAAO;AAClBC,6BAAS,CACL;AACIC,+BAAOjB,UAAUiB,KAAV,CAAgB,WAAhB,CADX;AAEIC,4BAAI,WAFR;AAGIC,iCAAS;AACLC,wCAAY;AADP;AAHb,qBADK;AADS,iBAAP,CADoC;AAYnDC,gCAAgB,OAAO;AACnBL,6BAAS,CACL;AACIC,+BAAOjB,UAAUiB,KAAV,CAAgB,YAAhB,CADX;AAEIC,4BAAI,YAFR;AAGIC,iCAAS;AACLC,wCAAY;AADP;AAHb,qBADK;AADU,iBAAP;AAZmC,aAA/C;AADiD,SAA7D,CAfgB,CAApB;;AA2CAnB,oBAAYqB,SAAZ,GAAwB,YAAW;AAC/B,iBAAKC,aAAL,CACIvB,UAAUiB,KAAV,CAAgB,WAAhB,CADJ,EAEI;AACIE,yBAASnB,UAAUiB,KAAV,CAAgB,gBAAhB,CADb;AAEIO,4BAAY,aAFhB;AAGIC,0BAAU,aAHd;AAIIP,oBAAI;AAJR,aAFJ;AASA,iBAAKK,aAAL,CACIvB,UAAUiB,KAAV,CAAgB,YAAhB,CADJ,EAEI;AACIE,yBAASnB,UAAUiB,KAAV,CAAgB,iBAAhB,CADb;AAEIO,4BAAY,aAFhB;AAGIC,0BAAU,cAHd;AAIIP,oBAAI;AAJR,aAFJ;AASH,SAnBD;;AAqBA,eAAOjB,WAAP;AACH;AA1EgC;QAAxBH,uB,GAAAA,uB","file":"UserCoachesModelFactory.js","sourcesContent":["import { ModelDefinitionBuilder } from '../../base/ModelDefinitionBuilder';\n\n/**\n * @typedef {Object} UserCoachesInstanceAttributes\n * @property {number} id\n * @property {string} name\n * @property {number} createdAt\n * @property {number} updatedAt\n */\n\n/**\n * @typedef {sequelize.Instance<UserCoachesInstanceAttributes>} UserCoachesInstance\n */\n\n/**\n * @typedef {sequelize.Model<UserCoachesInstance>} UserCoachesModel\n */\n\nexport class UserCoachesModelFactory {\n    /**\n     * @param {sequelize.Sequelize} sequelize\n     * @return {UserCoachesModel}\n     */\n    static define(sequelize) {\n        /**\n         * @type {UserCoachesModel}\n         */\n        const UserCoaches = sequelize.define(\n            'UserCoach',\n            ModelDefinitionBuilder.properties({\n\n                userId: {\n                    type: sequelize.Sequelize.INTEGER,\n                    allowNull: false,\n                },\n\n                yearOfExperience: {\n                    type: sequelize.Sequelize.FLOAT,\n                    allowNull: false,\n                },\n\n            }),\n            Object.assign(ModelDefinitionBuilder.options('userCoaches'), {\n                scopes: Object.assign(ModelDefinitionBuilder.scopes(), {\n                    withExpertise: () => ({\n                        include: [\n                            {\n                                model: sequelize.model('Expertise'),\n                                as: 'expertise',\n                                through: {\n                                    attributes: [],\n                                }\n                            }\n                        ]\n                    }),\n                    withCredential: () => ({\n                        include: [\n                            {\n                                model: sequelize.model('Credential'),\n                                as: 'credential',\n                                through: {\n                                    attributes: [],\n                                }\n                            },\n                        ],\n                    })\n                }),\n            })\n        );\n\n        UserCoaches.associate = function() {\n            this.belongsToMany(\n                sequelize.model('Expertise'),\n                {\n                    through: sequelize.model('CoachExpertise'),\n                    foreignKey: 'userCoachId',\n                    otherKey: 'expertiseId',\n                    as: 'expertise'\n                }\n            );\n            this.belongsToMany(\n                sequelize.model('Credential'),\n                {\n                    through: sequelize.model('CoachCredential'),\n                    foreignKey: 'userCoachId',\n                    otherKey: 'credentialId',\n                    as: 'credential'\n                }\n            );\n        };\n\n        return UserCoaches;\n    }\n}\n"]}