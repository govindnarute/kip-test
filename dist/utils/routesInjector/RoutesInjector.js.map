{"version":3,"sources":["../../../src/utils/routesInjector/RoutesInjector.js"],"names":["RoutesInjector","registerRoutes","container","appBuilder","cradle","routesScope","length","forEach","item","resolver","resolve","apiRoot"],"mappings":";;;;;AAAA;;;;AAIO,MAAMA,cAAN,CAAqB;AACxB;;;;AAIA,WAAOC,cAAP,CAAsBC,SAAtB,EAAiCC,UAAjC,EAA6C;AACzC,YAAI,CAACD,UAAUE,MAAV,CAAiBC,WAAjB,CAA6BC,MAAlC,EAA0C;;AAE1CJ,kBAAUE,MAAV,CAAiBC,WAAjB,CAA6BE,OAA7B,CAAsCC,IAAD,IAAU;AAC3C,kBAAMC,WAAWP,UAAUQ,OAAV,CAAkBF,IAAlB,CAAjB;AACAL,uBAAWF,cAAX,CAA0BQ,SAASE,OAAnC,EAA4CF,QAA5C;AACH,SAHD;AAIH;AAZuB;QAAfT,c,GAAAA,c","file":"RoutesInjector.js","sourcesContent":["/**\n * @typedef {Object} AppBuilder\n */\n\nexport class RoutesInjector {\n    /**\n     * @param {Object} container Awilix container for DI\n     * @param {AppBuilder} appBuilder\n     */\n    static registerRoutes(container, appBuilder) {\n        if (!container.cradle.routesScope.length) return;\n\n        container.cradle.routesScope.forEach((item) => {\n            const resolver = container.resolve(item);\n            appBuilder.registerRoutes(resolver.apiRoot, resolver);\n        });\n    }\n}\n"]}