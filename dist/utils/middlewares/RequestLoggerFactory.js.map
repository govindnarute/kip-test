{"version":3,"sources":["../../../src/utils/middlewares/RequestLoggerFactory.js"],"names":["uuid","RequestLoggerFactory","getWriter","WebLogger","req","res","next","start","Date","request","id","v4","method","host","headers","userAgent","getHeaders","log","toUpperCase","url","on","duration","getTime","_headers","excludeHeaders","cachedHeaders","Object","assign","forEach","key"],"mappings":";;;;;;;AAAA;;IAAYA,I;;;;AAEL,MAAMC,oBAAN,CAA2B;AAC9B;;;AAGA,WAAOC,SAAP,CAAiB,EAAEC,SAAF,EAAjB,EAAgC;AAC5B,eAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvB,kBAAMC,QAAQ,IAAIC,IAAJ,EAAd;;AAEA,kBAAMC,UAAU;AACZC,oBAAIV,KAAKW,EAAL,EADQ;AAEZC,wBAAQR,IAAIQ,MAFA;AAGZC,sBAAMT,IAAIU,OAAJ,CAAYD,IAHN;AAIZE,2BAAWX,IAAIU,OAAJ,CAAY,YAAZ,CAJC;AAKZA,yBAASb,qBAAqBe,UAArB,CAAgCZ,IAAIU,OAApC;AALG,aAAhB;;AAQAX,sBAAUc,GAAV,CAAc,OAAd,EAAwB,OAAMb,IAAIQ,MAAJ,CAAWM,WAAX,EAAyB,IAAGd,IAAIe,GAAI,EAAlE,EAAqEV,OAArE;;AAEAJ,gBAAIe,EAAJ,CAAO,QAAP,EAAiB,MAAM;AACnBjB,0BAAUc,GAAV,CAAc,OAAd,EAAwB,OAAMb,IAAIQ,MAAJ,CAAWM,WAAX,EAAyB,IAAGd,IAAIe,GAAI,EAAlE,EAAqE;AACjET,wBAAID,QAAQC,EADqD;AAEjEW,8BAAW,GAAE,IAAIb,IAAJ,GAAWc,OAAX,KAAuBf,MAAMe,OAAN,EAAgB,KAFa;AAGjER,6BAASb,qBAAqBe,UAArB,CAAgCX,IAAIkB,QAApC;AAHwD,iBAArE;AAKH,aAND;;AAQAjB;AACH,SAtBD;AAuBH;;AAED,WAAOU,UAAP,CAAkBF,OAAlB,EAA2B;AACvB,cAAMU,iBAAiB,CAAC,QAAD,CAAvB;AACA,cAAMC,gBAAgBC,OAAOC,MAAP,CAAc,EAAd,EAAkBb,OAAlB,CAAtB;AACAU,uBAAeI,OAAf,CAAuBC,OAAO,OAAOJ,cAAcI,GAAd,CAArC;AACA,eAAOJ,aAAP;AACH;AAnC6B;QAArBxB,oB,GAAAA,oB","file":"RequestLoggerFactory.js","sourcesContent":["import * as uuid from 'uuid';\n\nexport class RequestLoggerFactory {\n    /**\n     * @return {function(*, *, *)}\n     */\n    static getWriter({ WebLogger }) {\n        return (req, res, next) => {\n            const start = new Date();\n\n            const request = {\n                id: uuid.v4(),\n                method: req.method,\n                host: req.headers.host,\n                userAgent: req.headers['user-agent'],\n                headers: RequestLoggerFactory.getHeaders(req.headers),\n            };\n\n            WebLogger.log('trace', `❯❯❯ ${req.method.toUpperCase()} ${req.url}`, request);\n\n            res.on('finish', () => {\n                WebLogger.log('trace', `❮❮❮ ${req.method.toUpperCase()} ${req.url}`, {\n                    id: request.id,\n                    duration: `${new Date().getTime() - start.getTime()} ms`,\n                    headers: RequestLoggerFactory.getHeaders(res._headers),\n                });\n            });\n\n            next();\n        };\n    }\n\n    static getHeaders(headers) {\n        const excludeHeaders = ['cookie'];\n        const cachedHeaders = Object.assign({}, headers);\n        excludeHeaders.forEach(key => delete cachedHeaders[key]);\n        return cachedHeaders;\n    }\n}\n"]}