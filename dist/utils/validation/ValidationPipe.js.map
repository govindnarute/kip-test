{"version":3,"sources":["../../../src/utils/validation/ValidationPipe.js"],"names":["Joi","ValidationPipe","validate","schema","data","options","validateAppSchema","appSchema","request","abortEarly","convert","body","result","error","BadRequestError","details","message","value","query","params"],"mappings":";;;;;;;AAAA;;IAAYA,G;;AACZ;;;;AAEO,MAAMC,cAAN,CAAqB;AACxB,WAAOC,QAAP,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;AACnC,eAAOL,IAAIE,QAAJ,CAAaE,IAAb,EAAmBD,MAAnB,EAA2BE,OAA3B,CAAP;AACH;;AAED;;;;;AAKA,iBAAaC,iBAAb,CAA+BC,SAA/B,EAA0CC,OAA1C,EAAmD;AAC/C,cAAMH,UAAU;AACZI,wBAAY,IADA;AAEZC,qBAAS;AAFG,SAAhB;;AAKA,YAAIH,UAAUI,IAAd,EAAoB;AAChB,kBAAMC,SAASX,eAAeC,QAAf,CAAwBK,UAAUI,IAAlC,EAAwCH,QAAQG,IAAhD,EAAsDN,OAAtD,CAAf;AACA,gBAAIO,OAAOC,KAAX,EAAkB;AACd,sBAAM,IAAIC,qBAAJ,CAAoBF,OAAOC,KAAP,CAAaE,OAAb,CAAqB,CAArB,EAAwBC,OAA5C,EAAqD,kBAArD,CAAN;AACH;;AAEDR,oBAAQG,IAAR,GAAeC,OAAOK,KAAtB;AACH;;AAED,YAAIV,UAAUW,KAAd,EAAqB;AACjB,kBAAMN,SAASX,eAAeC,QAAf,CAAwBK,UAAUW,KAAlC,EAAyCV,QAAQU,KAAjD,EAAwDb,OAAxD,CAAf;AACA,gBAAIO,OAAOC,KAAX,EAAkB;AACd,sBAAM,IAAIC,qBAAJ,CAAoBF,OAAOC,KAAP,CAAaE,OAAb,CAAqB,CAArB,EAAwBC,OAA5C,EAAqD,kBAArD,CAAN;AACH;;AAEDR,oBAAQU,KAAR,GAAgBN,OAAOK,KAAvB;AACH;;AAED,YAAIV,UAAUY,MAAd,EAAsB;AAClB,kBAAMP,SAASX,eAAeC,QAAf,CAAwBK,UAAUY,MAAlC,EAA0CX,QAAQW,MAAlD,EAA0Dd,OAA1D,CAAf;AACA,gBAAIO,OAAOC,KAAX,EAAkB;AACd,sBAAM,IAAIC,qBAAJ,CAAoBF,OAAOC,KAAP,CAAaE,OAAb,CAAqB,CAArB,EAAwBC,OAA5C,EAAqD,kBAArD,CAAN;AACH;;AAEDR,oBAAQW,MAAR,GAAiBP,OAAOK,KAAxB;AACH;AACJ;AA1CuB;QAAfhB,c,GAAAA,c","file":"ValidationPipe.js","sourcesContent":["import * as Joi from 'joi';\nimport { BadRequestError } from '../http';\n\nexport class ValidationPipe {\n    static validate(schema, data, options) {\n        return Joi.validate(data, schema, options);\n    }\n\n    /**\n     * @param {AppSchema} appSchema\n     * @param {e.request} request\n     * @returns {Promise<void>}\n     */\n    static async validateAppSchema(appSchema, request) {\n        const options = {\n            abortEarly: true,\n            convert: true,\n        };\n\n        if (appSchema.body) {\n            const result = ValidationPipe.validate(appSchema.body, request.body, options);\n            if (result.error) {\n                throw new BadRequestError(result.error.details[0].message, 'VALIDATION_ERROR');\n            }\n\n            request.body = result.value;\n        }\n\n        if (appSchema.query) {\n            const result = ValidationPipe.validate(appSchema.query, request.query, options);\n            if (result.error) {\n                throw new BadRequestError(result.error.details[0].message, 'VALIDATION_ERROR');\n            }\n\n            request.query = result.value;\n        }\n\n        if (appSchema.params) {\n            const result = ValidationPipe.validate(appSchema.params, request.params, options);\n            if (result.error) {\n                throw new BadRequestError(result.error.details[0].message, 'VALIDATION_ERROR');\n            }\n\n            request.params = result.value;\n        }\n    }\n}\n"]}