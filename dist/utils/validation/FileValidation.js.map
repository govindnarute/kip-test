{"version":3,"sources":["../../../src/utils/validation/FileValidation.js"],"names":["fileType","fs","FileValidation","BaseFileValidation","validate","field","maxSize","mimeTypes","req","res","next","files","BadRequestError","size","readFileSync","path","err","file","type","indexOf","mime","locals"],"mappings":";;;;;;;AAAA;;AACA;;IAAYA,Q;;AACZ;;IAAYC,E;;AACZ;;;;AAEO,MAAMC,cAAN,SAA6BC,sCAA7B,CAAgD;AACnD,WAAOC,QAAP,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,SAAhC,EAA2C;AACvC,eAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvB,gBAAI,CAACF,IAAIG,KAAL,IAAc,CAACH,IAAIG,KAAJ,CAAUN,KAAV,CAAnB,EAAqC;AACjC,uBAAOK,KAAK,IAAIE,qBAAJ,EAAL,CAAP;AACH;;AAED,gBAAIJ,IAAIG,KAAJ,CAAUN,KAAV,EAAiBQ,IAAjB,GAAwBP,OAA5B,EAAqC;AACjC,uBAAOI,KAAK,IAAIE,qBAAJ,EAAL,CAAP;AACH;;AAEDX,eAAGa,YAAH,CAAgBN,IAAIG,KAAJ,CAAUN,KAAV,EAAiBU,IAAjC,EAAuC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClD,oBAAID,GAAJ,EAAS;AACL,2BAAON,KAAKM,GAAL,CAAP;AACH;;AAED,sBAAME,OAAOlB,SAASiB,IAAT,CAAb;AACA,oBAAGC,SAAS,IAAT,IAAiBX,UAAUY,OAAV,CAAkBD,KAAKE,IAAvB,MAAiC,CAAC,CAAtD,EAAyD;AACrD,2BAAOV,KAAK,IAAIE,qBAAJ,EAAL,CAAP;AACH;;AAEDH,oBAAIY,MAAJ,CAAWrB,QAAX,GAAsBkB,KAAKE,IAA3B;AACAV;AACH,aAZD;AAaH,SAtBD;AAuBH;AAzBkD;QAA1CR,c,GAAAA,c","file":"FileValidation.js","sourcesContent":["import { BaseFileValidation } from '../../base/BaseFileValidation';\nimport * as fileType  from 'file-type';\nimport * as fs from 'fs';\nimport { BadRequestError } from '../http';\n\nexport class FileValidation extends BaseFileValidation {\n    static validate(field, maxSize, mimeTypes) {\n        return (req, res, next) => {\n            if (!req.files || !req.files[field]) {\n                return next(new BadRequestError());\n            }\n\n            if (req.files[field].size > maxSize) {\n                return next(new BadRequestError());\n            }\n\n            fs.readFileSync(req.files[field].path, (err, file) => {\n                if (err) {\n                    return next(err);\n                }\n\n                const type = fileType(file);\n                if(type === null || mimeTypes.indexOf(type.mime) === -1) {\n                    return next(new BadRequestError());\n                }\n\n                res.locals.fileType = type.mime;\n                next();\n            });\n        };\n    }\n}\n"]}