{"version":3,"sources":["../../../src/utils/database/DBConnectionFactory.js"],"names":["DBConnectionFactory","connect","config","environment","process","env","NODE_ENV","dbConfig","Object","assign","get","logger","LoggerFactory","createLogger","label","logging","sql","timezone","tz","guess","sequelize","Sequelize","DatabaseInjector","injectModels"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;AAEO,MAAMA,mBAAN,CAA0B;AAC7B;;;AAGA,SAAOC,OAAP,CAAe,EAAEC,MAAF,EAAf,EAA2B;AACvB;;;AAGA,UAAMC,cAAcC,QAAQC,GAAR,CAAYC,QAAhC;AACA,UAAMC,WAAWC,OAAOC,MAAP,CAAc,EAAd,EAAkBP,OAAOQ,GAAP,CAAWP,WAAX,CAAlB,CAAjB;AACA,UAAMQ,SAASC,sBAAcC,YAAd,CAA2BN,SAASO,KAApC,CAAf;AACAP,aAASQ,OAAT,GAAmBJ,OAAOK,GAA1B;AACAT,aAASU,QAAT,GAAoBC,mBAAGC,KAAH,EAApB;AACA,UAAMC,YAAY,IAAIC,mBAAJ,CAAcd,QAAd,CAAlB;AACAe,uCAAiBC,YAAjB,CAA8BH,SAA9B;;AAEA,WAAOA,SAAP;AACH;AAjB4B;QAApBpB,mB,GAAAA,mB","file":"DBConnectionFactory.js","sourcesContent":["import { LoggerFactory } from './../logger';\nimport { tz } from 'moment-timezone';\nimport Sequelize from 'sequelize';\nimport { DatabaseInjector } from '../../models/DatabaseInjector';\n\nexport class DBConnectionFactory {\n    /**\n     * @return {sequelize.Sequelize}\n     */\n    static connect({ config }) {\n        /**\n         * @type {string}\n         */\n        const environment = process.env.NODE_ENV;\n        const dbConfig = Object.assign({}, config.get(environment));\n        const logger = LoggerFactory.createLogger(dbConfig.label);\n        dbConfig.logging = logger.sql;\n        dbConfig.timezone = tz.guess();\n        const sequelize = new Sequelize(dbConfig);\n        DatabaseInjector.injectModels(sequelize);\n\n        return sequelize;\n    }\n}\n"]}