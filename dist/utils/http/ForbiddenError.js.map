{"version":3,"sources":["../../../src/utils/http/ForbiddenError.js"],"names":["DEFAULT_CODE","DEFAULT_MESSAGE","ForbiddenError","CustomError","constructor","message","code","options","HttpStatusCode","Forbidden"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,eAAe,iBAArB;AACA,MAAMC,kBAAkB,iBAAxB;;AAEA;;;AAGO,MAAMC,cAAN,SAA6BC,wBAA7B,CAAyC;AAC5C;;;;;AAKAC,cAAYC,UAAUJ,eAAtB,EAAuCK,OAAON,YAA9C,EAA4DO,UAAU,EAAtE,EAA0E;AACtE,UAAMC,sBAAeC,SAArB,EAAgCH,IAAhC,EAAsCD,OAAtC,EAA+CE,OAA/C;AACH;AAR2C;QAAnCL,c,GAAAA,c","file":"ForbiddenError.js","sourcesContent":["import { CustomError } from './CustomError';\nimport { HttpStatusCode } from '../../resources/erros';\n\nconst DEFAULT_CODE = 'FORBIDDEN_ERROR';\nconst DEFAULT_MESSAGE = 'Forbidden error';\n\n/**\n * extends CustomError\n */\nexport class ForbiddenError extends CustomError {\n    /**\n     * @param code\n     * @param message\n     * @param options\n     */\n    constructor(message = DEFAULT_MESSAGE, code = DEFAULT_CODE, options = {}) {\n        super(HttpStatusCode.Forbidden, code, message, options);\n    }\n}\n\n"]}