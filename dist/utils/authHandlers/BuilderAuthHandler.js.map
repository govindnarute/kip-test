{"version":3,"sources":["../../../src/utils/authHandlers/BuilderAuthHandler.js"],"names":["BuilderAuthHandler","constructor","SessionsService","build","params","AuthHandler","type","SessionType","User","Object"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,MAAMA,kBAAN,CAAyB;;AAE5BC,gBAAYC,eAAZ,EAA6B;AACzB,aAAKA,eAAL,GAAuBA,eAAvB;AACH;;AAEDC,UAAMC,MAAN,EAAc;AACV,YAAI,CAACA,MAAL,EAAa;AACT,mBAAO,IAAIC,wBAAJ,CAAgB,KAAKH,eAArB,EAAsC,EAAEI,MAAMC,sBAAYC,IAApB,EAAtC,CAAP;AACH;AACDJ,iBAASA,kBAAkBK,MAAlB,GAA2BL,MAA3B,GAAoC,EAAEE,MAAMF,MAAR,EAA7C;AACA,eAAO,IAAIC,wBAAJ,CAAgB,KAAKH,eAArB,EAAsCE,MAAtC,CAAP;AACH;AAZ2B;QAAnBJ,kB,GAAAA,kB","file":"BuilderAuthHandler.js","sourcesContent":["import { AuthHandler } from './AuthHandler';\nimport { SessionType } from '../../resources/sessions';\n\nexport class BuilderAuthHandler {\n\n    constructor(SessionsService) {\n        this.SessionsService = SessionsService;\n    }\n\n    build(params) {\n        if (!params) {\n            return new AuthHandler(this.SessionsService, { type: SessionType.User });\n        }\n        params = params instanceof Object ? params : { type: params };\n        return new AuthHandler(this.SessionsService, params);\n    }\n}\n"]}