{"version":3,"sources":["../../src/helpers/ObjectKeyComposer.js"],"names":["IS_INT","ObjectKeyComposer","createKey","name","value","extract","key","regExp","res","match","test","parseInt"],"mappings":";;;;;AAAA,MAAMA,SAAS,YAAf;;AAEO,MAAMC,iBAAN,CAAwB;AAC3B;;;;;AAKA,WAAOC,SAAP,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAC1B,eAAQ,GAAED,IAAK,IAAGC,KAAM,GAAxB;AACH;;AAED;;;;;AAKA,WAAOC,OAAP,CAAeC,GAAf,EAAoBC,MAApB,EAA4B;AACxB,cAAMC,MAAMF,IAAIG,KAAJ,CAAUF,MAAV,CAAZ;;AAEA,YAAI,CAACC,GAAD,IAAQ,CAACA,IAAI,CAAJ,CAAb,EAAqB;AACjB,mBAAO,IAAP;AACH;;AAED,YAAI,CAACR,OAAOU,IAAP,CAAYF,IAAI,CAAJ,CAAZ,CAAL,EAA0B;AACtB,mBAAOA,IAAI,CAAJ,CAAP;AACH;;AAED,eAAOG,SAASH,IAAI,CAAJ,CAAT,EAAiB,EAAjB,CAAP;AACH;AA3B0B;QAAlBP,iB,GAAAA,iB","file":"ObjectKeyComposer.js","sourcesContent":["const IS_INT = /^-?[0-9]+$/;\n\nexport class ObjectKeyComposer {\n    /**\n     * @param {string} name\n     * @param {string|number} value\n     * @return {string}\n     */\n    static createKey(name, value) {\n        return `${name}[${value}]`;\n    }\n\n    /**\n     * @param {string} key\n     * @param {RegExp} regExp\n     * @return {number|string|null}\n     */\n    static extract(key, regExp) {\n        const res = key.match(regExp);\n\n        if (!res || !res[1]) {\n            return null;\n        }\n\n        if (!IS_INT.test(res[1])) {\n            return res[1];\n        }\n\n        return parseInt(res[1], 10);\n    }\n}\n"]}